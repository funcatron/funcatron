#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;

env FUNC_RABBIT_PORT_61613_TCP_ADDR;
env RABBIT_HOST;
env RABBIT_PORT ;
env RABBIT_USER ;
env RABBIT_PWD;

env TRON_QUEUE;
env DEV_MODE;
env PORT_80;
env HOST;

env INSTANCEID;

events {
    worker_connections  1024;
}




http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;

init_worker_by_lua_block {
                         require("/data/funcatron")
                         }


    server {
        listen       80;
        server_name  localhost;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;


	location / {

     #DEV# lua_code_cache off; #only for development

     lua_use_default_type off;

		 content_by_lua_file /data/req.lua;

		}

    }


}
