/*
 * This build file was auto generated by running the Gradle 'init' task
 * by 'dpp' at '12/20/16 8:28 AM' with Gradle 3.2.1
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/3.2.1/userguide/tutorial_java_projects.html
 */

// Apply the java plugin to add support for Java
apply plugin: 'java'

// In this section you declare where to find the dependencies of your project
repositories {
    // Use 'jcenter' for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    jcenter()
    maven {
        url "https://clojars.org/repo"
    }
}

// In this section you declare the dependencies for your production and test code
dependencies {

    // Declare the dependency for your favourite test framework you want to use in your tests.
    // TestNG is also supported by the Gradle Test task. Just change the
    // testCompile dependency to testCompile 'org.testng:testng:6.8.1' and add
    // 'test.useTestNG()' to your build script.
    testCompile 'junit:junit:4.12'

    compile 'funcatron:intf:0.2.0'

    compile 'com.fasterxml.jackson.core:jackson-databind:2.8.5'
}

buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.4"
    }
}

buildscript {
    repositories {
        // jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'org.ajoberstar:gradle-git:1.6.0'
    }
}

apply plugin: "com.github.johnrengelman.shadow"
apply plugin: 'org.ajoberstar.grgit'

// Insert the Git SHA into the Manifest file for logging purposes
import org.ajoberstar.grgit.*
def repo = Grgit.open()
jar {
    manifest {
        attributes("Built-By": System.getProperty("user.name"))
        attributes(["Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    "GitHeadRev": repo.head().getId() ], "common")
    }
    from sourceSets.main.output
}